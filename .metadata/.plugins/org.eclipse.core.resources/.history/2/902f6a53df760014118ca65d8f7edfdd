var margin = {top: 30, right: 40, bottom: 30, left: 50},
    w = 1024 - margin.left - margin.right,
    h = 800 - margin.top - margin.bottom;
	
var dataset = [ {x: 50, y: 50}, {x: 100, y: 100}];
	
var dragbarw = 10;

// Scales and axes. Note the inverted domain for the y-scale: bigger is up!
var x = d3.time.scale().range([0, w]),
    y = d3.scale.linear().range([h, 0]),
    xAxis = d3.svg.axis().scale(x).tickSize(-h).tickSubdivide(true),
    yAxis = d3.svg.axis().scale(y).ticks(4).orient("right");

var svg = d3.select("body").append("svg")
		    .attr("width", w)
		    .attr("height", h);
    
var newg = svg.selectAll("rect")
			  .data(dataset)
			  .enter()
			  .append("g");
     

        
var boxes = newg.append("rect")
			   	.attr("x", function(d, i) {return i * (w / dataset.length);})
      			.attr("y", function(d) { return d; })
		      	.attr("height", function(d) {return d.y;})
		        .attr("width",  function(d) {return d.x;})
		      	.attr("fill", "lightgreen")
		      	.attr("fill-opacity", .5);
			   	
var dragtop = svg.selectAll("g")
			  	 .data(dataset)
				 .append("rect")
				  .attr("x", function(d, i) { return i * (width/2 - dragbarw/2); })
      			  .attr("y", function(d) { return d - (dragbarw/2); })
      			  .attr("width", dragbarw)
			      .attr("height", dragbarw)       
			      .attr("fill", "white") 
			      .attr("fill-opacity", 0) 
			      .attr("stroke", "black")
			      .attr("stroke-width", 1)
			      .attr("cursor", "ns-resize");
			   
var dragbottom = svg.selectAll("g")
			  	 .data(dataset)
				 .append("rect")
				  .attr("x", function(d, i) { return i * (width/2 - dragbarw/2); })
      			  .attr("y", function(d, i) { return i + height - (dragbarw/2); })
      			  .attr("width", dragbarw)
			      .attr("height", dragbarw)       
			      .attr("fill", "white") 
			      .attr("fill-opacity", 0) 
			      .attr("stroke", "black")
			      .attr("stroke-width", 1)
			      .attr("cursor", "ns-resize");
